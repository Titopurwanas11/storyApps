(()=>{const e="v3",s=`core-${e}`,t=`map-${e}`,o=`asset-${e}`,a=["/storyApps/","/storyApps/index.html","/storyApps/js/app.bundle.js","/storyApps/offline.html","/storyApps/manifest.json","/storyApps/assets/icons/android-chrome-192x192.png","/storyApps/assets/icons/android-chrome-512x512.png","/storyApps/assets/icons/apple-touch-icon.png","/storyApps/assets/icons/favicon-16x16.png","/storyApps/assets/icons/favicon-32x32.png","/storyApps/assets/icons/favicon.ico"],n=["https://unpkg.com/leaflet@1.7.1/dist/leaflet.css","https://unpkg.com/leaflet@1.7.1/dist/leaflet.js","https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js","https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png","/storyApps/assets/images/map-error.webp"];async function i(e,s){try{const t=await fetch(e);if(t.ok){const o=await caches.open(s);await o.put(e,t.clone())}return t}catch(s){return await caches.match(e)||Promise.reject(s)}}precacheAndRoute([{'revision':'0710b52d3ebc25e719cccc1ec0454522','url':'/storyApps/assets/icons/android-chrome-192x192.png'},{'revision':'b5d1fe516a65b8aa17563dd79c1cf949','url':'/storyApps/assets/icons/android-chrome-512x512.png'},{'revision':'6461c0ae593b7e750e853d909d171969','url':'/storyApps/assets/icons/apple-touch-icon.png'},{'revision':'dffa9c6d2b6bdf069954147bbe00e69b','url':'/storyApps/assets/icons/favicon-16x16.png'},{'revision':'4533bf08b123f2ff0ff9909f0e084dae','url':'/storyApps/assets/icons/favicon-32x32.png'},{'revision':'fee29d345199217888a20aca0edca7fa','url':'/storyApps/assets/icons/favicon.ico'},{'revision':'172eb76c7af6fcbd59cbcca91b58bb0e','url':'/storyApps/assets/icons/marker-icon-2x.webp'},{'revision':'09a39c22ffe4f7e87a2bc58d38cd4b7b','url':'/storyApps/assets/icons/marker-icon.webp'},{'revision':'bfb05e509f6ed2ad1638148ca425af9e','url':'/storyApps/assets/icons/marker-shadow.webp'},{'revision':'81c8aadc6fdfc9e593aec4bb55691622','url':'/storyApps/index.html'},{'revision':'8da0cdc2d46e4e028888dd7d3612020a','url':'/storyApps/js/app.bundle.js'},{'revision':'bccb6fff2985510fa99854923b08081c','url':'/storyApps/js/sw-register.js'},{'revision':'01aeb24e02515a98ab41be8d2ba65e07','url':'/storyApps/manifest.json'},{'revision':'d41d8cd98f00b204e9800998ecf8427e','url':'/storyApps/offline.html'}]),self.addEventListener("install",(e=>{e.waitUntil(caches.open(s).then((e=>(console.log("Caching core assets:",a),e.addAll(a)))).then((()=>self.skipWaiting())).catch((e=>{console.error("Service Worker install failed (addAll error):",e),console.error("Failed to cache the following core assets:"),Promise.allSettled(a.map((e=>fetch(e,{cache:"no-store"})))).then((e=>{e.forEach(((e,s)=>{const t=a[s];"rejected"===e.status?console.error(`- URL: ${t} (Network Error):`,e.reason):e.value&&!e.value.ok&&console.error(`- URL: ${t} (HTTP Error):`,e.value.status,e.value.statusText)}))})).finally((()=>{console.warn("Diagnosis fetch aset individual selesai. Periksa error spesifik di atas.")}))})))})),self.addEventListener("activate",(e=>{console.log("Service Worker: Activating..."),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==s&&e!==t&&e!==o)return console.log("Deleting old cache:",e),caches.delete(e)}))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(e=>{const{request:s}=e,c=new URL(s.url);"GET"===s.method&&(n.some((e=>s.url.includes(e)))?e.respondWith(caches.match(s).then((e=>e||async function(e,s){const t=await caches.open(s),o=await fetch(e);return o.ok&&await t.put(e,o.clone()),o}(s,t)))):c.pathname.startsWith("/stories")?e.respondWith(i(s,o)):a.includes(c.pathname)?e.respondWith(caches.match(s).then((e=>e||fetch(s)))):e.respondWith(i(s,o).catch((()=>caches.match("/storyApps/offline.html")))))})),self.addEventListener("push",(e=>{const s=e.data?.json()||{title:"New Story",options:{body:"A new story has been shared",icon:"/storyApps/assets/icons/android-chrome-192x192.png"}};e.waitUntil(self.registration.showNotification(s.title,s.options))})),self.addEventListener("notificationclick",(e=>{e.notification.close(),e.waitUntil(self.clients.matchAll({type:"window"}).then((e=>e.length?e[0].focus():self.clients.openWindow("/storyApps/"))))})),self.addEventListener("sync",(e=>{"sync-stories"===e.tag&&e.waitUntil(async function(){const e=await caches.open(o),s=await Promise.all([fetch("/stories?size=10"),fetch("/stories/recent")]);await Promise.all(s.map((s=>{if(s.ok)return e.put(s.url,s)})))}())}))})();